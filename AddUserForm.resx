<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SmeLTgAAAABJRU5ErkJggg==
</value>
  </data>
</root>